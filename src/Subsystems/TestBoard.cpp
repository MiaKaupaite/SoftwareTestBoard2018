// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "ctre/Phoenix.h"


#include "TestBoard.h"
#include "../RobotMap.h"
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

TestBoard::TestBoard() : frc::Subsystem("TestBoard") {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    cANMotor1 = RobotMap::testBoardCANMotor1;
    ultra = RobotMap::testBoardUltra;
    cANMotor2 = RobotMap::testBoardCANMotor2;
    cANMotor3 = RobotMap::testBoardCANMotor3;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
}

void TestBoard::InitDefaultCommand() {
    // Set the default command for a subsystem here.
    // SetDefaultCommand(new MySpecialCommand());
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
}

void TestBoard::Periodic() {
    // Put code here to be run every loop

}


// Put methods for controlling this subsystem
// here. Call these from Commands.

void TestBoard::RunWithJoystick (double stickX, double stickY, double stickZ) {
	cANMotor1->Set(stickY);
	cANMotor2->Set(stickX);
	cANMotor3->Set(stickZ);
}

void TestBoard::RunWithSensor() {
	if ((ultra->GetRangeInches()) < 5) {
		cANMotor1->Set(-.5);
		cANMotor2->Set(.25);
		cANMotor3->Set(-.75);
	} else if (ultra->GetRangeInches() > 5 && ultra->GetRangeInches() < 15) {
		cANMotor1->Set(.75);
		cANMotor2->Set(-.5);
		cANMotor3->Set(.25);
	} else {
		cANMotor1->Set(0);
		cANMotor2->Set(0);
		cANMotor3->Set(0);
	}
}
